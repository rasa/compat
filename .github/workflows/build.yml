name: build

on:
  push:
    branches: [ main ]
    paths: ['**.go', 'go.mod', '.github/workflows/*']
  pull_request:
    branches: [ main ]
    paths: ['**.go', 'go.mod', '.github/workflows/*']
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-24.04 # ubuntu-latest
          - macos-15 # arm64
          # tests pass running on windows 11 locally, so test on all Windows
          # builders, for now:
          - windows-2025
          - windows-11-arm
          - windows-2022 # windows-latest
          - windows-2019
          # - ubuntu-22.04
          # - macos-15-large # amd64
          # - macos-14 # arm64 # macos-latest
          # - macos-14-large # amd64
          # - macos-13 # amd64
          # - macos-13-xlarge # arm64

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        if: runner.os != 'Windows'
        with:
          go-version: '1.24'
          check-latest: true
          cache: false

      # Let's see if we see the same 80% speed improvement as mentioned in
      # https://github.com/elastic/apm-server/pull/15623#issuecomment-2648709041
      - uses: antontroshin/setup-go@bda02de8887c9946189f81e7e59512914aeb9ea4
        if: runner.os == 'Windows'
        with:
          go-version: '1.24'
          check-latest: true
          cache: false

      - name: run go version
        run: |
          printf '::notice ::%s\n' "$(go version)"
          echo "GO_VERSION=$(go version | sed 's#^.*go##;s# .*##')" >>"${GITHUB_ENV}"
          printf 'GOCACHE=%s\n' "$(go env GOCACHE | tr '\\' '/')" >>"${GITHUB_ENV}"
          printf 'GOMODCACHE=%s\n' "$(go env GOMODCACHE | tr '\\' '/')" >>"${GITHUB_ENV}"

      - name: Cache Go modcache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.GOCACHE }}
            ${{ env.GOMODCACHE }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: make ci
      - name: Upload coverage
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverage-${{ matrix.os }}
          path: coverage.*

      - run: go tool goreleaser release --clean --snapshot
        if: ${{ runner.os == 'Linux' }}

      - name: Upload dist
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: dist-${{ matrix.os }}
          path: dist

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          fail_ci_if_error: false
          files: ./coverage.out
          token: ${{ secrets.CODECOV_TOKEN }}
