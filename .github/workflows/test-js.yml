name: test-js

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-js:
    name: test-js
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      GOOS: js
      GOARCH: wasm
    steps:
    - uses: actions/checkout@v5

    - uses: actions/setup-go@v6
      with:
        go-version: '1.25'
        check-latest: true

    - uses: actions/setup-node@v5
      with:
        node-version: 20

    - run: |
        # Run Go js/wasm test in node.js
        printf '::notice ::%s\n' "$(go version)"
        GOROOT=$(go env GOROOT)
        cp "${GOROOT}/lib/wasm/wasm_exec.js" .
        go test -exec="${GOROOT}/lib/wasm/go_js_wasm_exec" -covermode=atomic -coverprofile=coverage.out -coverpkg=. .
        sed -i.bak "/compat\/cmd\//d; /compat\/golang\//d;" coverage.out
        rm -f *.bak

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
      with:
        fail_ci_if_error: false
        files: ./coverage.out
        name: coverage-${{ env.GOOS }}
        token: ${{ secrets.CODECOV_TOKEN }}
