name: test-js

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test-js:
    name: test-js
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        check-latest: true

    - uses: actions/setup-node@v4
      with:
        node-version: 20

    - run: |
        # Run Go WASM test in Node.js
        printf '::notice ::%s\n' "$(go version)"
        cp "$(go env GOROOT)/lib/wasm/wasm_exec.js" .
        test -f wasm_exec.js || wget https://raw.githubusercontent.com/golang/go/refs/heads/master/lib/wasm/wasm_exec.js
        GOOS=js GOARCH=wasm go test -v -c -o main.test.wasm .
        cat <<-'EOF' >run-test.js
        require("./wasm_exec.js");
        const fs = require("fs");
        const go = new Go();
        WebAssembly.instantiate(fs.readFileSync("main.test.wasm"), go.importObject)
          .then(r => go.run(r.instance))
          .catch(err => console.error(err));
        EOF
        node run-test.js
        exit 0
